image: maven:3.8.4-jdk-11  # Docker image to use for the build environment

pipelines:
  default:
    - step:
        name: Create and Run Update Script
        script:
          # Configure Git with your username and email
          - git config --global user.email "Raslen.ouarghi@ensi-uma.tn"
          - git config --global user.name "raslen ouarghi"

          # Create the update-pom.sh file, append content, make it executable, and run it
          - |
            # Create the update-pom.sh file
            touch update-pom.sh

            # Append the shebang to the script
            echo '#!/bin/bash' > update-pom.sh

            # Append the configuration and script logic
            echo 'CONFIGURATION="<configuration>\n<cloudHubDeployment>\n<uri>https://anypoint.mulesoft.com/</uri>\n<muleVersion>4.7.0</muleVersion>\n<username>Feriel</username>\n<password>Feriel123**</password>\n<applicationName>projectcicd</applicationName>\n<businessGroup>ITMMA</businessGroup>\n<environment>Develop</environment>\n<workers>1</workers>\n<objectStoreV2>true</objectStoreV2>\n</cloudHubDeployment>\n</configuration>"' >> update-pom.sh
            echo 'POM_FILE="pom.xml"' >> update-pom.sh
            echo 'sed -i "/<\/plugin>/i $CONFIGURATION" $POM_FILE' >> update-pom.sh

            # Make the script executable
            chmod +x update-pom.sh

            # Verify the script creation
            ls -la
            cat update-pom.sh

            # Run the script to modify pom.xml
            ./update-pom.sh

          # Configure Git remote
          - git remote add dev https://raslenouarghi@bitbucket.org/cicd_with_mulesoft/mulesoft_cicd.git
          
          # Add changes, commit, and push
          - git add pom.xml
          - git commit -m "Update pom.xml with cloudHubDeployment configuration"
          - git push dev developer

    - step:
        name: Build
        caches:
          - maven
        script:
          - mvn clean package  # Run Maven to clean and package the code

    - step:
        name: Deploy to CloudHub
        script:
          - mvn deploy -DmuleDeploy -DskipTests  # Deploy the code to CloudHub

    - step:
        name: Failure Message
        trigger: manual  # Triggered manually if previous steps fail
        script:
          - echo 'Build or deployment failed.'  # Log a message if the build or deployment fails


